@page "/cpu"

<PageTitle>CPU Test</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">CPU Test</MudText>

<MudButton Disabled="@isProcessing" OnClick="ExecuteAsync" Variant="Variant.Filled" Color="Color.Primary">
    @if (isProcessing)
    {
        <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
        <MudText Class="ms-2">Procesando</MudText>
    }
    else
    {
        <MudText>Ejecutar</MudText>
    }
</MudButton>

@code {
    bool isProcessing = false;

    private async Task ExecuteAsync()
    {
        isProcessing = true;

        StateHasChanged();

        int parallelTasks = Environment.ProcessorCount * 2;

        var tasks = Enumerable.Range(0, parallelTasks).Select(_ => Task.Run(() =>
        {
            double result = 0;
            for (int i = 0; i < 1_000_000_000; i++)
            {
                result += Math.Sqrt(i);
            }
        }));

        await Task.WhenAll(tasks);

        StateHasChanged();

        isProcessing = false;
    }
}
